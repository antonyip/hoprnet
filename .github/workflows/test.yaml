name: HOPR Test

on:
  push:
    branches: ['**']
    paths-ignore:
      - 'docs/**'

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14]
        package: ['core', 'ethereum', 'all', 'core-ethereum']

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}


      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}

          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn install
          node_modules/.bin/lerna link 


      - name: Build (all)
        if: matrix.package == 'all' 
        run: |
          yarn workspaces foreach --exclude={@hoprnet/hopr-core,@hoprnet/hopr-ethereum,@hoprnet/hopr-core-ethereum} --parallel --topological-dev run build

      - name: Test (all)
        if: matrix.package == 'all'
        run: |
          yarn workspaces foreach --exclude={@hoprnet/hopr-core,@hoprnet/hopr-ethereum,@hoprnet/hopr-core-ethereum} --parallel run test

      - name: Build ${{ matrix.package }}
        if: matrix.package != 'all' 
        run: |
          yarn workspace @hoprnet/hopr-${{ matrix.package }} run build

      - name: Test ${{ matrix.package }}
        if: matrix.package != 'all' 
        run: |
          yarn workspace @hoprnet/hopr-${{ matrix.package }} run test
